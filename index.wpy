<style lang="less" src="./index.less"></style>
<template>
  <view class="refresh-content refresh-container {{className}}" 
  bind:touchstart="touchstart" 
  bind:touchmove="touchmove" 
  bind:touchend="touchend"
  animation="{{animationData}}">
  <view class="refresh-load">
    <view class="refresh-pull-arrow"></view>
    <slot name="refresh-content"></slot>
  </view>
</view>
</template>
<script>
import wepy from 'wepy'

export default class Refresh extends wepy.component {
  props = {
    scrollTop: {
      type: Number
    }
  }

  data = {
    touchYDelta: '',
    isLoading: false,
    loadWrapH: '',
    winfactor: 0.2,
    translateVal: '',
    isMoved: false,
    firstTouchY: '',
    initialScroll: '',
    friction: 2.5,
    triggerDistance: 100,
    className: '',
    animationData: {}
  }

  methods = {
    scroll (ev) {
      console.log(ev)
    },
    touchstart (ev) {
      if (this.isLoading) {
        return
      }
      this.isMoved = false
      this.sDuration = '0ms'
      this.touchYDelta = ''
      const touchobj = ev.touches[0]
      this.firstTouchY = parseInt(touchobj.clientY)
      this.initialScroll = this.scrollTop
    },
    touchmove (ev) {
      if (this.isLoading) {
        return
      }
      let self = this
      let moving = function() {
        let touchobj = ev.touches[0]
        let touchY = parseInt(touchobj.clientY)
        let touchYDelta = touchY - self.firstTouchY
        self.touchYDelta = touchYDelta
        // self.scrollY()
        // if (self.scrollTop === 0 && touchYDelta > 0) {
        // }
        /* eslint-disable */
        if (self.initialScroll > 0 || self.scrollTop > 0 || self.scrollTop === 0 && touchYDelta < 0) {
          self.firstTouchY = touchY
          return
        }
        /* eslint-enable */
        let translateVal = Math.pow(touchYDelta, 0.85)
        let animation = wx.createAnimation({
          duration: 0,
          timingFunction: 'linear'
        })
        animation.translate3d(0, translateVal, 0).step()
        self.animationData = animation.export()
        self.isMoved = true
        if (touchYDelta > self.triggerDistance) {
          self.className = 'refresh-pull-up'
        } else {
          self.className = 'refresh-pull-down'
        }
      }
      this.throttle(moving(), 10)
    },
    touchend (ev) {
      let self = this
      if (this.isLoading || !this.isMoved) {
        this.isMoved = false
        return
      }
      // 根据下拉高度判断是否加载
      if (this.touchYDelta >= this.triggerDistance) {
        this.isLoading = true
        let animation = wx.createAnimation({
          duration: 300,
          timingFunction: 'linear'
        })
        animation.translate3d(0, 60, 0).step()
        self.animationData = animation.export()
        self.className = 'refreshing'
        this.$emit('refresh', 'success')
      } else {
        let animation = wx.createAnimation({
          duration: 300,
          timingFunction: 'linear'
        })
        animation.translate3d(0, 0, 0).step()
        self.animationData = animation.export()
        this.$emit('refresh', 'error')
      }
      this.isMoved = false
    }
  }

  scrollY () {
    wx.createSelectorQuery().select('#scroll-container').scrollOffset((res) => {
      this.scrollTop = res.scrollTop
      this.$apply()
    }).exec()
  }

  reset () {
    this.isLoading = false
    this.className = 'refresh-pull-up'
    let animation = wx.createAnimation({
      duration: 300,
      timingFunction: 'linear'
    })
    animation.translate3d(0, 0, 0).step()
    this.animationData = animation.export()
    this.className = 'refresh-pull-down'
    this.$apply()
  }

  throttle (fn, delay) {
    let allowSample = true
    return function(e) {
      if (allowSample) {
        allowSample = false
        setTimeout(function() { allowSample = true }, delay)
        fn(e)
      }
    }
  }

  onLoad () {}
}
</script>
